{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/try/Assignment1/policycondashboard/src/components/RevenueChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RevenueChart = () => {\n  _s();\n  const totalRevenueChartEl = useRef(null);\n  const totalRevenueChartInstance = useRef(null);\n  useEffect(() => {\n    const totalRevenueChartOptions = {\n      series: [{\n        name: '2021',\n        data: [18, 7, 15, 29, 18, 12, 9]\n      }, {\n        name: '2020',\n        data: [-13, -18, -9, -14, -5, -17, -15]\n      }],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      }\n      // ... (rest of the options)\n      // Add the rest of your options here as per your initial provided configuration\n    };\n    if (totalRevenueChartEl.current) {\n      if (totalRevenueChartInstance.current) {\n        totalRevenueChartInstance.current.destroy();\n      }\n      totalRevenueChartInstance.current = new ApexCharts(totalRevenueChartEl.current, totalRevenueChartOptions);\n      totalRevenueChartInstance.current.render();\n    }\n    return () => {\n      if (totalRevenueChartInstance.current) {\n        totalRevenueChartInstance.current.destroy();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: totalRevenueChartEl,\n    id: \"totalRevenueChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n};\n_s(RevenueChart, \"vWOn0Vnh9NKIc2rJqMGfw8Gt8KQ=\");\n_c = RevenueChart;\nexport default RevenueChart;\nvar _c;\n$RefreshReg$(_c, \"RevenueChart\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","jsxDEV","_jsxDEV","RevenueChart","_s","totalRevenueChartEl","totalRevenueChartInstance","totalRevenueChartOptions","series","name","data","chart","height","stacked","type","toolbar","show","current","destroy","render","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/try/Assignment1/policycondashboard/src/components/RevenueChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\n\nconst RevenueChart: React.FC = () => {\n  const totalRevenueChartEl = useRef<HTMLDivElement>(null);\n  const totalRevenueChartInstance = useRef<ApexCharts | null>(null);\n\n  useEffect(() => {\n    const totalRevenueChartOptions: ApexCharts.ApexOptions = {\n      series: [\n        {\n          name: '2021',\n          data: [18, 7, 15, 29, 18, 12, 9],\n        },\n        {\n          name: '2020',\n          data: [-13, -18, -9, -14, -5, -17, -15],\n        },\n      ],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: { show: false },\n      },\n      // ... (rest of the options)\n      // Add the rest of your options here as per your initial provided configuration\n    };\n\n    if (totalRevenueChartEl.current) {\n      if (totalRevenueChartInstance.current) {\n        totalRevenueChartInstance.current.destroy();\n      }\n\n      totalRevenueChartInstance.current = new ApexCharts(totalRevenueChartEl.current, totalRevenueChartOptions);\n      totalRevenueChartInstance.current.render();\n    }\n\n    return () => {\n      if (totalRevenueChartInstance.current) {\n        totalRevenueChartInstance.current.destroy();\n      }\n    };\n  }, []);\n\n  return <div ref={totalRevenueChartEl} id=\"totalRevenueChart\" />;\n};\n\nexport default RevenueChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,mBAAmB,GAAGN,MAAM,CAAiB,IAAI,CAAC;EACxD,MAAMO,yBAAyB,GAAGP,MAAM,CAAoB,IAAI,CAAC;EAEjED,SAAS,CAAC,MAAM;IACd,MAAMS,wBAAgD,GAAG;MACvDC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACjC,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;MACxC,CAAC,CACF;MACDC,KAAK,EAAE;QACLC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;UAAEC,IAAI,EAAE;QAAM;MACzB;MACA;MACA;IACF,CAAC;IAED,IAAIX,mBAAmB,CAACY,OAAO,EAAE;MAC/B,IAAIX,yBAAyB,CAACW,OAAO,EAAE;QACrCX,yBAAyB,CAACW,OAAO,CAACC,OAAO,CAAC,CAAC;MAC7C;MAEAZ,yBAAyB,CAACW,OAAO,GAAG,IAAIjB,UAAU,CAACK,mBAAmB,CAACY,OAAO,EAAEV,wBAAwB,CAAC;MACzGD,yBAAyB,CAACW,OAAO,CAACE,MAAM,CAAC,CAAC;IAC5C;IAEA,OAAO,MAAM;MACX,IAAIb,yBAAyB,CAACW,OAAO,EAAE;QACrCX,yBAAyB,CAACW,OAAO,CAACC,OAAO,CAAC,CAAC;MAC7C;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhB,OAAA;IAAKkB,GAAG,EAAEf,mBAAoB;IAACgB,EAAE,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAACrB,EAAA,CA3CID,YAAsB;AAAAuB,EAAA,GAAtBvB,YAAsB;AA6C5B,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}