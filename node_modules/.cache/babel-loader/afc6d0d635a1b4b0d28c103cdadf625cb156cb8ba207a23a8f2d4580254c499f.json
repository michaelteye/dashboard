{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nconst RevenueChart = () => {\n  _s();\n  const totalRevenueChartEl = useRef(null);\n  useEffect(() => {\n    const totalRevenueChartOptions = {\n      series: [{\n        name: '2021',\n        data: [18, 7, 15, 29, 18, 12, 9]\n      }, {\n        name: '2020',\n        data: [-13, -18, -9, -14, -5, -17, -15]\n      }],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: {\n          show: false\n        }\n      }\n      // ... (rest of the options)\n      // Add the rest of your options here as per your initial provided configuration\n    };\n    if (totalRevenueChartEl.current) {\n      const totalRevenueChart = new ApexCharts(totalRevenueChartEl.current, totalRevenueChartOptions);\n      totalRevenueChart.render();\n    }\n  }, []);\n\n  // return <div ref={totalRevenueChartEl} id=\"totalRevenueChart\" />;\n};\n_s(RevenueChart, \"YsS9dyfx2ZjZVOh+Oq3m1xLfgOU=\");\n_c = RevenueChart;\nexport default RevenueChart;\nvar _c;\n$RefreshReg$(_c, \"RevenueChart\");","map":{"version":3,"names":["useEffect","useRef","ApexCharts","RevenueChart","_s","totalRevenueChartEl","totalRevenueChartOptions","series","name","data","chart","height","stacked","type","toolbar","show","current","totalRevenueChart","render","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/try/Assignment1/policycondashboard/src/components/RevenueChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\n\nconst RevenueChart: React.FC = () => {\n  const totalRevenueChartEl = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const totalRevenueChartOptions: ApexCharts.ApexOptions = {\n      series: [\n        {\n          name: '2021',\n          data: [18, 7, 15, 29, 18, 12, 9],\n        },\n        {\n          name: '2020',\n          data: [-13, -18, -9, -14, -5, -17, -15],\n        },\n      ],\n      chart: {\n        height: 300,\n        stacked: true,\n        type: 'bar',\n        toolbar: { show: false },\n      },\n      // ... (rest of the options)\n      // Add the rest of your options here as per your initial provided configuration\n    };\n\n    if (totalRevenueChartEl.current) {\n      const totalRevenueChart = new ApexCharts(totalRevenueChartEl.current, totalRevenueChartOptions);\n      totalRevenueChart.render();\n    }\n  }, []);\n\n  // return <div ref={totalRevenueChartEl} id=\"totalRevenueChart\" />;\n};\n\nexport default RevenueChart;\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;AAEnC,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAMC,mBAAmB,GAAGJ,MAAM,CAAiB,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMM,wBAAgD,GAAG;MACvDC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACjC,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;MACxC,CAAC,CACF;MACDC,KAAK,EAAE;QACLC,MAAM,EAAE,GAAG;QACXC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,KAAK;QACXC,OAAO,EAAE;UAAEC,IAAI,EAAE;QAAM;MACzB;MACA;MACA;IACF,CAAC;IAED,IAAIV,mBAAmB,CAACW,OAAO,EAAE;MAC/B,MAAMC,iBAAiB,GAAG,IAAIf,UAAU,CAACG,mBAAmB,CAACW,OAAO,EAAEV,wBAAwB,CAAC;MAC/FW,iBAAiB,CAACC,MAAM,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF,CAAC;AAACd,EAAA,CAhCID,YAAsB;AAAAgB,EAAA,GAAtBhB,YAAsB;AAkC5B,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}