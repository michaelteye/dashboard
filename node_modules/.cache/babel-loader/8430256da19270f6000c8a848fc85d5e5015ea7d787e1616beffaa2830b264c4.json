{"ast":null,"code":"var _jsxFileName = \"/Users/teyemichael/Desktop/code/react/try/Assignment1/policycondashboard/src/components/GrowthChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\n\n// Your config object here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet config = {\n  colors: {\n    primary: '#696cff',\n    secondary: '#8592a3',\n    success: '#71dd37',\n    info: '#03c3ec',\n    warning: '#ffab00',\n    danger: '#ff3e1d',\n    dark: '#233446',\n    black: '#000',\n    white: '#fff',\n    cardColor: '#fff',\n    bodyBg: '#f5f5f9',\n    bodyColor: '#697a8d',\n    headingColor: '#566a7f',\n    textMuted: '#a1acb8',\n    borderColor: '#eceef1',\n    axisColor: '#eceef1'\n  }\n};\nconst GrowthChart = () => {\n  _s();\n  const growthChartEl = useRef(null);\n  const growthChartInstance = useRef(null);\n  useEffect(() => {\n    let cardColor, headingColor, axisColor, shadeColor, borderColor;\n\n    // Assuming config is available or imported properly\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    axisColor = config.colors.axisColor;\n    borderColor = config.colors.borderColor;\n    // Your options here\n    const growthChartOptions = {\n      series: [78],\n      labels: ['Growth'],\n      chart: {\n        height: 240,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: cardColor,\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: 15,\n              color: headingColor,\n              fontSize: '15px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -25,\n              color: headingColor,\n              fontSize: '22px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.5,\n          gradientToColors: [config.colors.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 0.6,\n          stops: [30, 70, 100]\n        }\n      },\n      stroke: {\n        dashArray: 5\n      },\n      grid: {\n        padding: {\n          top: -35,\n          bottom: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n    if (growthChartEl.current) {\n      if (growthChartInstance.current) {\n        growthChartInstance.current.destroy();\n        growthChartInstance.current = null;\n      }\n      growthChartInstance.current = new ApexCharts(growthChartEl.current, growthChartOptions);\n      growthChartInstance.current.render();\n    }\n    return () => {\n      if (growthChartInstance.current) {\n        growthChartInstance.current.destroy();\n        growthChartInstance.current = null;\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: growthChartEl,\n    id: \"growthChart\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n};\n_s(GrowthChart, \"XZI/DaIJB/kjHXEYePHq+9+W2Ks=\");\n_c = GrowthChart;\nexport default GrowthChart;\nvar _c;\n$RefreshReg$(_c, \"GrowthChart\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","jsxDEV","_jsxDEV","config","colors","primary","secondary","success","info","warning","danger","dark","black","white","cardColor","bodyBg","bodyColor","headingColor","textMuted","borderColor","axisColor","GrowthChart","_s","growthChartEl","growthChartInstance","shadeColor","growthChartOptions","series","labels","chart","height","type","plotOptions","radialBar","size","offsetY","startAngle","endAngle","hollow","track","background","strokeWidth","dataLabels","name","color","fontSize","fontWeight","fontFamily","value","fill","gradient","shade","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","stroke","dashArray","grid","padding","top","bottom","states","hover","filter","active","current","destroy","render","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/teyemichael/Desktop/code/react/try/Assignment1/policycondashboard/src/components/GrowthChart.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\n\n// Your config object here\nlet config = {\n  colors: {\n    primary: '#696cff',\n    secondary: '#8592a3',\n    success: '#71dd37',\n    info: '#03c3ec',\n    warning: '#ffab00',\n    danger: '#ff3e1d',\n    dark: '#233446',\n    black: '#000',\n    white: '#fff',\n    cardColor: '#fff',\n    bodyBg: '#f5f5f9',\n    bodyColor: '#697a8d',\n    headingColor: '#566a7f',\n    textMuted: '#a1acb8',\n    borderColor: '#eceef1',\n    axisColor:'#eceef1'\n  }\n};\n\nconst GrowthChart: React.FC = () => {\n  const growthChartEl = useRef<HTMLDivElement>(null);\n  const growthChartInstance = useRef<ApexCharts | null>(null);\n\n  useEffect(() => {\n    let cardColor, headingColor, axisColor, shadeColor, borderColor;\n\n    // Assuming config is available or imported properly\n    cardColor = config.colors.cardColor;\n    headingColor = config.colors.headingColor;\n    axisColor = config.colors.axisColor;\n    borderColor = config.colors.borderColor;\n    // Your options here\n    const growthChartOptions = {\n      series: [78],\n      labels: ['Growth'],\n      chart: {\n        height: 240,\n        type: 'radialBar'\n      },\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '55%'\n          },\n          track: {\n            background: cardColor,\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: 15,\n              color: headingColor,\n              fontSize: '15px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            },\n            value: {\n              offsetY: -25,\n              color: headingColor,\n              fontSize: '22px',\n              fontWeight: '500',\n              fontFamily: 'Public Sans'\n            }\n          }\n        }\n      },\n      colors: [config.colors.primary],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          shadeIntensity: 0.5,\n          gradientToColors: [config.colors.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 0.6,\n          stops: [30, 70, 100]\n        }\n      },\n      stroke: {\n        dashArray: 5\n      },\n      grid: {\n        padding: {\n          top: -35,\n          bottom: -10\n        }\n      },\n      states: {\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        },\n        active: {\n          filter: {\n            type: 'none'\n          }\n        }\n      }\n    };\n\n    if (growthChartEl.current) {\n      if (growthChartInstance.current) {\n        growthChartInstance.current.destroy();\n        growthChartInstance.current = null;\n      }\n\n      growthChartInstance.current = new ApexCharts(growthChartEl.current, growthChartOptions);\n      growthChartInstance.current.render();\n    }\n\n    return () => {\n      if (growthChartInstance.current) {\n        growthChartInstance.current.destroy();\n        growthChartInstance.current = null;\n      }\n    };\n  }, []);\n\n  return <div ref={growthChartEl} id=\"growthChart\" />;\n};\n\nexport default GrowthChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,UAAU,MAAM,YAAY;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,IAAIC,MAAM,GAAG;EACXC,MAAM,EAAE;IACNC,OAAO,EAAE,SAAS;IAClBC,SAAS,EAAE,SAAS;IACpBC,OAAO,EAAE,SAAS;IAClBC,IAAI,EAAE,SAAS;IACfC,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE,SAAS;IACjBC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,MAAM;IACjBC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE,SAAS;IACpBC,YAAY,EAAE,SAAS;IACvBC,SAAS,EAAE,SAAS;IACpBC,WAAW,EAAE,SAAS;IACtBC,SAAS,EAAC;EACZ;AACF,CAAC;AAED,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,aAAa,GAAGxB,MAAM,CAAiB,IAAI,CAAC;EAClD,MAAMyB,mBAAmB,GAAGzB,MAAM,CAAoB,IAAI,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,EAAEG,YAAY,EAAEG,SAAS,EAAEK,UAAU,EAAEN,WAAW;;IAE/D;IACAL,SAAS,GAAGX,MAAM,CAACC,MAAM,CAACU,SAAS;IACnCG,YAAY,GAAGd,MAAM,CAACC,MAAM,CAACa,YAAY;IACzCG,SAAS,GAAGjB,MAAM,CAACC,MAAM,CAACgB,SAAS;IACnCD,WAAW,GAAGhB,MAAM,CAACC,MAAM,CAACe,WAAW;IACvC;IACA,MAAMO,kBAAkB,GAAG;MACzBC,MAAM,EAAE,CAAC,EAAE,CAAC;MACZC,MAAM,EAAE,CAAC,QAAQ,CAAC;MAClBC,KAAK,EAAE;QACLC,MAAM,EAAE,GAAG;QACXC,IAAI,EAAE;MACR,CAAC;MACDC,WAAW,EAAE;QACXC,SAAS,EAAE;UACTC,IAAI,EAAE,GAAG;UACTC,OAAO,EAAE,EAAE;UACXC,UAAU,EAAE,CAAC,GAAG;UAChBC,QAAQ,EAAE,GAAG;UACbC,MAAM,EAAE;YACNJ,IAAI,EAAE;UACR,CAAC;UACDK,KAAK,EAAE;YACLC,UAAU,EAAE1B,SAAS;YACrB2B,WAAW,EAAE;UACf,CAAC;UACDC,UAAU,EAAE;YACVC,IAAI,EAAE;cACJR,OAAO,EAAE,EAAE;cACXS,KAAK,EAAE3B,YAAY;cACnB4B,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE,KAAK;cACjBC,UAAU,EAAE;YACd,CAAC;YACDC,KAAK,EAAE;cACLb,OAAO,EAAE,CAAC,EAAE;cACZS,KAAK,EAAE3B,YAAY;cACnB4B,QAAQ,EAAE,MAAM;cAChBC,UAAU,EAAE,KAAK;cACjBC,UAAU,EAAE;YACd;UACF;QACF;MACF,CAAC;MACD3C,MAAM,EAAE,CAACD,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC;MAC/B4C,IAAI,EAAE;QACJlB,IAAI,EAAE,UAAU;QAChBmB,QAAQ,EAAE;UACRC,KAAK,EAAE,MAAM;UACbC,cAAc,EAAE,GAAG;UACnBC,gBAAgB,EAAE,CAAClD,MAAM,CAACC,MAAM,CAACC,OAAO,CAAC;UACzCiD,aAAa,EAAE,IAAI;UACnBC,WAAW,EAAE,CAAC;UACdC,SAAS,EAAE,GAAG;UACdC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG;QACrB;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,SAAS,EAAE;MACb,CAAC;MACDC,IAAI,EAAE;QACJC,OAAO,EAAE;UACPC,GAAG,EAAE,CAAC,EAAE;UACRC,MAAM,EAAE,CAAC;QACX;MACF,CAAC;MACDC,MAAM,EAAE;QACNC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNnC,IAAI,EAAE;UACR;QACF,CAAC;QACDoC,MAAM,EAAE;UACND,MAAM,EAAE;YACNnC,IAAI,EAAE;UACR;QACF;MACF;IACF,CAAC;IAED,IAAIR,aAAa,CAAC6C,OAAO,EAAE;MACzB,IAAI5C,mBAAmB,CAAC4C,OAAO,EAAE;QAC/B5C,mBAAmB,CAAC4C,OAAO,CAACC,OAAO,CAAC,CAAC;QACrC7C,mBAAmB,CAAC4C,OAAO,GAAG,IAAI;MACpC;MAEA5C,mBAAmB,CAAC4C,OAAO,GAAG,IAAIpE,UAAU,CAACuB,aAAa,CAAC6C,OAAO,EAAE1C,kBAAkB,CAAC;MACvFF,mBAAmB,CAAC4C,OAAO,CAACE,MAAM,CAAC,CAAC;IACtC;IAEA,OAAO,MAAM;MACX,IAAI9C,mBAAmB,CAAC4C,OAAO,EAAE;QAC/B5C,mBAAmB,CAAC4C,OAAO,CAACC,OAAO,CAAC,CAAC;QACrC7C,mBAAmB,CAAC4C,OAAO,GAAG,IAAI;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOlE,OAAA;IAAKqE,GAAG,EAAEhD,aAAc;IAACiD,EAAE,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACtD,EAAA,CA1GID,WAAqB;AAAAwD,EAAA,GAArBxD,WAAqB;AA4G3B,eAAeA,WAAW;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}